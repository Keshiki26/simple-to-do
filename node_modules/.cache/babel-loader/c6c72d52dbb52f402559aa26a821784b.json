{"ast":null,"code":"import _objectSpread from \"/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from \"react\";\nimport DraggableChildComponent from \"../draggableChildren/draggableChildren\";\n\nvar DraggableComponent = /*#__PURE__*/function (_Component) {\n  _inherits(DraggableComponent, _Component);\n\n  var _super = _createSuper(DraggableComponent);\n\n  function DraggableComponent() {\n    var _this;\n\n    _classCallCheck(this, DraggableComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      divs: [],\n      currentDiv: null,\n      toDiv: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.setState({\n        divs: _this.props.children\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"insertElementBefore\", function () {\n      var divs = _toConsumableArray(_this.state.divs);\n\n      var currentDiv = _this.state.currentDiv;\n      var toDiv = _this.state.toDiv;\n\n      if (currentDiv !== toDiv) {\n        var currentEle = _objectSpread({}, divs[currentDiv]);\n\n        divs = divs.filter(function (val, idx) {\n          return idx !== currentDiv;\n        });\n        divs.splice(toDiv, 0, currentEle); // This is a hack - Initialize the state as blank and then reset the state\n        // With only 1 setState, the entire component doesnot get rerendered.\n\n        _this.setState({\n          divs: [],\n          currentDiv: null,\n          toDiv: null\n        }, function () {\n          _this.setState({\n            divs: divs\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dragStart\", function (idx) {\n      _this.setState({\n        currentDiv: idx\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dragEnter\", function (idx) {\n      _this.setState({\n        toDiv: idx\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dragDrop\", function () {\n      _this.insertElementBefore();\n    });\n\n    return _this;\n  }\n\n  _createClass(DraggableComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var ele = [];\n\n      var _loop = function _loop(i) {\n        ele.push(React.createElement(DraggableChildComponent, {\n          dragStart: function dragStart() {\n            return _this2.dragStart(i);\n          },\n          dragEnter: function dragEnter() {\n            return _this2.dragEnter(i);\n          },\n          dragEnd: _this2.dragDrop,\n          key: i\n        }, _this2.state.divs[i]));\n      };\n\n      for (var i = 0; i < this.state.divs.length; i++) {\n        _loop(i);\n      }\n\n      return React.createElement(React.Fragment, null, ele);\n    }\n  }]);\n\n  return DraggableComponent;\n}(Component);\n\nexport default DraggableComponent;","map":{"version":3,"sources":["/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/react-drag-reorder/dist/components/draggable/draggable.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","DraggableChildComponent","DraggableComponent","args","divs","currentDiv","toDiv","setState","props","children","state","currentEle","filter","val","idx","splice","insertElementBefore","ele","i","push","createElement","dragStart","dragEnter","dragEnd","dragDrop","length","Fragment"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport DraggableChildComponent from \"../draggableChildren/draggableChildren\";\n\nclass DraggableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      divs: [],\n      currentDiv: null,\n      toDiv: null\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.setState({\n        divs: this.props.children\n      });\n    });\n\n    _defineProperty(this, \"insertElementBefore\", () => {\n      let divs = [...this.state.divs];\n      let currentDiv = this.state.currentDiv;\n      let toDiv = this.state.toDiv;\n\n      if (currentDiv !== toDiv) {\n        let currentEle = { ...divs[currentDiv]\n        };\n        divs = divs.filter((val, idx) => {\n          return idx !== currentDiv;\n        });\n        divs.splice(toDiv, 0, currentEle); // This is a hack - Initialize the state as blank and then reset the state\n        // With only 1 setState, the entire component doesnot get rerendered.\n\n        this.setState({\n          divs: [],\n          currentDiv: null,\n          toDiv: null\n        }, () => {\n          this.setState({\n            divs\n          });\n        });\n      }\n    });\n\n    _defineProperty(this, \"dragStart\", idx => {\n      this.setState({\n        currentDiv: idx\n      });\n    });\n\n    _defineProperty(this, \"dragEnter\", idx => {\n      this.setState({\n        toDiv: idx\n      });\n    });\n\n    _defineProperty(this, \"dragDrop\", () => {\n      this.insertElementBefore();\n    });\n  }\n\n  render() {\n    let ele = [];\n\n    for (let i = 0; i < this.state.divs.length; i++) {\n      ele.push(React.createElement(DraggableChildComponent, {\n        dragStart: () => this.dragStart(i),\n        dragEnter: () => this.dragEnter(i),\n        dragEnd: this.dragDrop,\n        key: i\n      }, this.state.divs[i]));\n    }\n\n    return React.createElement(React.Fragment, null, ele);\n  }\n\n}\n\nexport default DraggableComponent;"]},"metadata":{},"sourceType":"module"}