{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport DraggableChildComponent from '../draggableChildren/draggableChildren';\n\nclass DraggableComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, 'state', {\n      divs: [],\n      currentDiv: null,\n      toDiv: null\n    });\n\n    _defineProperty(this, 'componentDidMount', () => {\n      this.setState({\n        divs: this.props.children\n      });\n    });\n\n    _defineProperty(this, 'insertElementBefore', () => {\n      let divs = [...this.state.divs];\n      let currentDiv = this.state.currentDiv;\n      let toDiv = this.state.toDiv;\n\n      if (currentDiv !== toDiv) {\n        let currentEle = { ...divs[currentDiv]\n        };\n        divs = divs.filter((val, idx) => {\n          return idx !== currentDiv;\n        });\n        divs.splice(toDiv, 0, currentEle); // This is a hack - Initialize the state as blank and then reset the state\n        // With only 1 setState, the entire component doesnot get rerendered.\n\n        this.setState({\n          divs: [],\n          currentDiv: null,\n          toDiv: null\n        }, () => {\n          this.setState({\n            divs\n          });\n        });\n      }\n    });\n\n    _defineProperty(this, 'dragStart', idx => {\n      this.setState({\n        currentDiv: idx\n      });\n    });\n\n    _defineProperty(this, 'dragEnter', idx => {\n      this.setState({\n        toDiv: idx\n      });\n    });\n\n    _defineProperty(this, 'dragDrop', () => {\n      this.insertElementBefore();\n    });\n  }\n\n  render() {\n    let ele = [];\n    let x = [];\n\n    for (let i = 0; i < this.state.divs.length; i++) {\n      ele.push(React.createElement(DraggableChildComponent, {\n        dragStart: () => this.dragStart(i),\n        dragEnter: () => this.dragEnter(i),\n        dragEnd: this.dragDrop,\n        key: i\n      }, this.state.divs[i]));\n      x.push(this.state.divs[th]);\n    } // console.log(this.props.toDos);\n    // console.log(ele);\n\n\n    this.props.dragCallBack(ele);\n    return React.createElement(React.Fragment, null, ele);\n  }\n\n}\n\nexport default DraggableComponent;","map":{"version":3,"sources":["/Users/razbasnet/Documents/react/GitHub/simple-to-do/node_modules/react-drag-reorder/dist/components/draggable/draggable.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Component","DraggableChildComponent","DraggableComponent","constructor","args","divs","currentDiv","toDiv","setState","props","children","state","currentEle","filter","val","idx","splice","insertElementBefore","render","ele","x","i","length","push","createElement","dragStart","dragEnter","dragEnd","dragDrop","th","dragCallBack","Fragment"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) {\n\tif (key in obj) {\n\t\tObject.defineProperty(obj, key, {\n\t\t\tvalue: value,\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\twritable: true,\n\t\t});\n\t} else {\n\t\tobj[key] = value;\n\t}\n\treturn obj;\n}\n\nimport React, { Component } from 'react';\nimport DraggableChildComponent from '../draggableChildren/draggableChildren';\n\nclass DraggableComponent extends Component {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\t_defineProperty(this, 'state', {\n\t\t\tdivs: [],\n\t\t\tcurrentDiv: null,\n\t\t\ttoDiv: null,\n\t\t});\n\n\t\t_defineProperty(this, 'componentDidMount', () => {\n\t\t\tthis.setState({\n\t\t\t\tdivs: this.props.children,\n\t\t\t});\n\t\t});\n\n\t\t_defineProperty(this, 'insertElementBefore', () => {\n\t\t\tlet divs = [...this.state.divs];\n\t\t\tlet currentDiv = this.state.currentDiv;\n\t\t\tlet toDiv = this.state.toDiv;\n\n\t\t\tif (currentDiv !== toDiv) {\n\t\t\t\tlet currentEle = { ...divs[currentDiv] };\n\t\t\t\tdivs = divs.filter((val, idx) => {\n\t\t\t\t\treturn idx !== currentDiv;\n\t\t\t\t});\n\t\t\t\tdivs.splice(toDiv, 0, currentEle); // This is a hack - Initialize the state as blank and then reset the state\n\t\t\t\t// With only 1 setState, the entire component doesnot get rerendered.\n\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tdivs: [],\n\t\t\t\t\t\tcurrentDiv: null,\n\t\t\t\t\t\ttoDiv: null,\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdivs,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\t_defineProperty(this, 'dragStart', (idx) => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentDiv: idx,\n\t\t\t});\n\t\t});\n\n\t\t_defineProperty(this, 'dragEnter', (idx) => {\n\t\t\tthis.setState({\n\t\t\t\ttoDiv: idx,\n\t\t\t});\n\t\t});\n\n\t\t_defineProperty(this, 'dragDrop', () => {\n\t\t\tthis.insertElementBefore();\n\t\t});\n\t}\n\n\trender() {\n\t\tlet ele = [];\n\t\tlet x = [];\n\n\t\tfor (let i = 0; i < this.state.divs.length; i++) {\n\t\t\tele.push(\n\t\t\t\tReact.createElement(\n\t\t\t\t\tDraggableChildComponent,\n\t\t\t\t\t{\n\t\t\t\t\t\tdragStart: () => this.dragStart(i),\n\t\t\t\t\t\tdragEnter: () => this.dragEnter(i),\n\t\t\t\t\t\tdragEnd: this.dragDrop,\n\t\t\t\t\t\tkey: i,\n\t\t\t\t\t},\n\t\t\t\t\tthis.state.divs[i]\n\t\t\t\t)\n\t\t\t);\n\t\t\tx.push(this.state.divs[th]);\n\t\t}\n\t\t// console.log(this.props.toDos);\n\t\t// console.log(ele);\n\t\tthis.props.dragCallBack(ele);\n\t\treturn React.createElement(React.Fragment, null, ele);\n\t}\n}\n\nexport default DraggableComponent;\n"]},"metadata":{},"sourceType":"module"}