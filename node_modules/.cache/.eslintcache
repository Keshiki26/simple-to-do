[{"/Users/razbasnet/Documents/react/GitHub/simple-to-do/src/index.js":"1","/Users/razbasnet/Documents/react/GitHub/simple-to-do/src/App.js":"2","/Users/razbasnet/Documents/react/GitHub/simple-to-do/src/Components/Add.js":"3","/Users/razbasnet/Documents/react/GitHub/simple-to-do/src/Components/Elements/EachNode.js":"4"},{"size":229,"mtime":1620704177841,"results":"5","hashOfConfig":"6"},{"size":1892,"mtime":1620710589179,"results":"7","hashOfConfig":"6"},{"size":1027,"mtime":1620709064243,"results":"8","hashOfConfig":"6"},{"size":1530,"mtime":1620709614366,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m00axn",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/razbasnet/Documents/react/GitHub/simple-to-do/src/index.js",[],"/Users/razbasnet/Documents/react/GitHub/simple-to-do/src/App.js",["20","21","22"],"import './App.css';\nimport { Grid, Typography } from '@material-ui/core';\nimport Add from './Components/Add';\nimport EachNode from './Components/Elements/EachNode';\nimport { useEffect, useState } from 'react';\nimport { Draggable } from 'react-drag-reorder';\n\nfunction App() {\n\tconst [toDos, setToDos] = useState(\n\t\tJSON.parse(localStorage.getItem('tasks')) || []\n\t);\n\tconst submitAction = (t) => {\n\t\tconst thisTask = { title: t, status: false };\n\t\tsetToDos([...toDos, thisTask]);\n\t\tlocalStorage.setItem('tasks', JSON.stringify([...toDos, thisTask]));\n\t};\n\tconst deleteToDo = (i) => {\n\t\tconst newTasks = toDos.filter((element, index) => index !== i);\n\t\tsetToDos(newTasks);\n\t\tlocalStorage.setItem('tasks', JSON.stringify(newTasks));\n\t};\n\tconst changeItemStatus = (i, status) => {\n\t\ttoDos[i].status = status;\n\t\tsetToDos(toDos);\n\t\tlocalStorage.setItem('tasks', JSON.stringify(toDos));\n\t\tconsole.log(toDos[i]);\n\t};\n\n\tconst dragCallBack = (a) => {\n\t\tlet av = [];\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tav.push(toDos[a[i].key]);\n\t\t}\n\t\tsetToDos(av);\n\t\tlocalStorage.setItem('tasks', JSON.stringify(av));\n\t};\n\n\tlet toDoItems = toDos.map((toDo, i) => (\n\t\t<EachNode\n\t\t\tkey={i}\n\t\t\tindex={i}\n\t\t\ttoDo={toDo.title}\n\t\t\tdelete={deleteToDo}\n\t\t\tstatus={toDo.status}\n\t\t\tchangeStatus={changeItemStatus}\n\t\t/>\n\t));\n\treturn (\n\t\t<Grid justify=\"center\" container direction=\"row\">\n\t\t\t<Grid justify=\"center\" container xs=\"12\" item>\n\t\t\t\t<Add submitAction={submitAction} />\n\t\t\t</Grid>\n\t\t\t<Grid>\n\t\t\t\t{toDos.length > 0 && (\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tclassName=\"helvetica-neue-font\"\n\t\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmargin: '10px',\n\t\t\t\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tTo Do Tasks\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t{/* <Grid xs=\"12\">\n\t\t\t\t<Draggable dragCallBack={dragCallBack}>{toDoItems}</Draggable>\n\t\t\t</Grid> */}\n\t\t\t{toDoItems}\n\t\t</Grid>\n\t);\n}\n\nexport default App;\n","/Users/razbasnet/Documents/react/GitHub/simple-to-do/src/Components/Add.js",["23"],"import { InputAdornment, InputLabel, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport CreateIcon from '@material-ui/icons/Create';\nexport default function Add(props) {\n\tconst [term, setTerm] = useState('');\n\n\treturn (\n\t\t<form\n\t\t\tnoValidate\n\t\t\tonSubmit={(e) => {\n\t\t\t\tif (term !== '') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tprops.submitAction(term);\n\t\t\t\t\tsetTerm('');\n\t\t\t\t}\n\t\t\t}}\n\t\t\tclassName=\"form-search\"\n\t\t>\n\t\t\t<TextField\n\t\t\t\tid=\"outlined-basic\"\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tautoFocus=\"true\"\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\trequired=\"true\"\n\t\t\t\tlabel=\"Add New\"\n\t\t\t\thelperText=\"To add a new task simply type and enter...\"\n\t\t\t\tplaceholder=\"Task....\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tfullWidth=\"true\"\n\t\t\t\tvalue={term}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetTerm(e.target.value);\n\t\t\t\t}}\n\t\t\t\tsize=\"large\"\n\t\t\t\tInputProps={{\n\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t<InputAdornment position=\"start\" disablePointerEvents=\"true\">\n\t\t\t\t\t\t\t<CreateIcon color=\"secondary\" />\n\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t></TextField>\n\t\t</form>\n\t);\n}\n","/Users/razbasnet/Documents/react/GitHub/simple-to-do/src/Components/Elements/EachNode.js",[],{"ruleId":"24","severity":1,"message":"25","line":5,"column":10,"nodeType":"26","messageId":"27","endLine":5,"endColumn":19},{"ruleId":"24","severity":1,"message":"28","line":6,"column":10,"nodeType":"26","messageId":"27","endLine":6,"endColumn":19},{"ruleId":"24","severity":1,"message":"29","line":29,"column":8,"nodeType":"26","messageId":"27","endLine":29,"endColumn":20},{"ruleId":"24","severity":1,"message":"30","line":1,"column":26,"nodeType":"26","messageId":"27","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","'dragCallBack' is assigned a value but never used.","'InputLabel' is defined but never used."]