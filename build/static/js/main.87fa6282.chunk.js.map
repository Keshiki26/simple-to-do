{"version":3,"sources":["Components/Add.js","Components/Elements/EachNode.js","App.js","index.js"],"names":["Add","props","useState","term","setTerm","noValidate","onSubmit","e","preventDefault","submitAction","className","TextField","id","color","autoFocus","autoComplete","required","label","helperText","placeholder","variant","fullWidth","value","onChange","target","size","InputProps","startAdornment","InputAdornment","position","disablePointerEvents","EachNode","status","finished","setFinished","Grid","direction","container","xs","align","fontSize","onClick","changeStatus","index","Typography","style","textDecoration","textTransform","toDo","delete","key","App","JSON","parse","localStorage","getItem","toDos","setToDos","deleteToDo","i","newTasks","filter","element","setItem","stringify","changeItemStatus","console","log","toDoItems","map","title","justify","item","t","thisTask","length","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87fa6282.chunk.js","sourcesContent":["import { InputAdornment, InputLabel, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport CreateIcon from '@material-ui/icons/Create';\nexport default function Add(props) {\n\tconst [term, setTerm] = useState('');\n\n\treturn (\n\t\t<form\n\t\t\tnoValidate\n\t\t\tonSubmit={(e) => {\n\t\t\t\tif (term !== '') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tprops.submitAction(term);\n\t\t\t\t\tsetTerm('');\n\t\t\t\t}\n\t\t\t}}\n\t\t\tclassName=\"form-search\"\n\t\t>\n\t\t\t<TextField\n\t\t\t\tid=\"outlined-basic\"\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tautoFocus=\"true\"\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\trequired=\"true\"\n\t\t\t\tlabel=\"Add New\"\n\t\t\t\thelperText=\"To add a new task simply type and enter...\"\n\t\t\t\tplaceholder=\"Task....\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tfullWidth=\"true\"\n\t\t\t\tvalue={term}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetTerm(e.target.value);\n\t\t\t\t}}\n\t\t\t\tsize=\"large\"\n\t\t\t\tInputProps={{\n\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t<InputAdornment position=\"start\" disablePointerEvents=\"true\">\n\t\t\t\t\t\t\t<CreateIcon color=\"secondary\" />\n\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t></TextField>\n\t\t</form>\n\t);\n}\n","import { Grid, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nfunction EachNode(props) {\n\tconst [finished, setFinished] = useState(props.status);\n\n\treturn (\n\t\t<Grid direction=\"row\" container className=\"each-to-do\" key={props.key}>\n\t\t\t<Grid xs=\"3\" align=\"center\" className=\"each-to-do-icon\">\n\t\t\t\t{' '}\n\t\t\t\t{finished ? (\n\t\t\t\t\t<CheckCircleIcon\n\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tsetFinished(false);\n\t\t\t\t\t\t\tprops.changeStatus(props.index, false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t></CheckCircleIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<CheckCircleOutlineIcon\n\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tsetFinished(true);\n\t\t\t\t\t\t\tprops.changeStatus(props.index, true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t></CheckCircleOutlineIcon>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid xs=\"6\" className=\"task-text-cont\">\n\t\t\t\t{' '}\n\t\t\t\t<Typography\n\t\t\t\t\talign=\"left\"\n\t\t\t\t\tclassName=\"task-text helvetica-neue-font\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextDecoration: finished ? 'line-through' : 'none',\n\t\t\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{props.toDo}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid xs=\"3\" align=\"center\" className=\"each-to-do-icon\">\n\t\t\t\t{' '}\n\t\t\t\t<DeleteIcon\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tprops.delete(props.index);\n\t\t\t\t\t}}\n\t\t\t\t></DeleteIcon>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default EachNode;\n","import './App.css';\nimport { Grid, Typography } from '@material-ui/core';\nimport Add from './Components/Add';\nimport EachNode from './Components/Elements/EachNode';\nimport { useEffect, useState } from 'react';\nimport { Draggable } from 'react-drag-reorder';\n\nfunction App() {\n\tconst [toDos, setToDos] = useState(\n\t\tJSON.parse(localStorage.getItem('tasks')) || []\n\t);\n\tconst submitAction = (t) => {\n\t\tconst thisTask = { title: t, status: false };\n\t\tsetToDos([...toDos, thisTask]);\n\t\tlocalStorage.setItem('tasks', JSON.stringify([...toDos, thisTask]));\n\t};\n\tconst deleteToDo = (i) => {\n\t\tconst newTasks = toDos.filter((element, index) => index !== i);\n\t\tsetToDos(newTasks);\n\t\tlocalStorage.setItem('tasks', JSON.stringify(newTasks));\n\t};\n\tconst changeItemStatus = (i, status) => {\n\t\ttoDos[i].status = status;\n\t\tsetToDos(toDos);\n\t\tlocalStorage.setItem('tasks', JSON.stringify(toDos));\n\t\tconsole.log(toDos[i]);\n\t};\n\n\tconst dragCallBack = (a) => {\n\t\tlet av = [];\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tav.push(toDos[a[i].key]);\n\t\t}\n\t\tsetToDos(av);\n\t\tlocalStorage.setItem('tasks', JSON.stringify(av));\n\t};\n\n\tlet toDoItems = toDos.map((toDo, i) => (\n\t\t<EachNode\n\t\t\tkey={i}\n\t\t\tindex={i}\n\t\t\ttoDo={toDo.title}\n\t\t\tdelete={deleteToDo}\n\t\t\tstatus={toDo.status}\n\t\t\tchangeStatus={changeItemStatus}\n\t\t/>\n\t));\n\treturn (\n\t\t<Grid justify=\"center\" container direction=\"row\">\n\t\t\t<Grid justify=\"center\" container xs=\"12\" item>\n\t\t\t\t<Add submitAction={submitAction} />\n\t\t\t</Grid>\n\t\t\t<Grid>\n\t\t\t\t{toDos.length > 0 && (\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tclassName=\"helvetica-neue-font\"\n\t\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmargin: '10px',\n\t\t\t\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tTo Do Tasks\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t{/* <Grid xs=\"12\">\n\t\t\t\t<Draggable dragCallBack={dragCallBack}>{toDoItems}</Draggable>\n\t\t\t</Grid> */}\n\t\t\t{toDoItems}\n\t\t</Grid>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}